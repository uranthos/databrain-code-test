{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class paygService {\n  constructor(_http) {\n    this._http = _http;\n    this.commonUrl = 'api/payg/';\n  }\n  handleError(error) {\n    //just logging error to console - some server logging could be added\n    console.error(error);\n    return throwError(() => error || 'Server error');\n  }\n  getTax(model) {\n    const completeUrl = this.commonUrl;\n    return this._http.post(completeUrl, model).pipe(catchError(this.handleError));\n  }\n}\npaygService.ɵfac = function paygService_Factory(t) {\n  return new (t || paygService)(i0.ɵɵinject(i1.HttpClient));\n};\npaygService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: paygService,\n  factory: paygService.ɵfac\n});","map":{"version":3,"mappings":"AAAA,SAASA,UAAwB,QAAwC,MAAM;AAK/E,SAASC,UAAU,QAAQ,gBAAgB;;;AAG3C,OAAM,MAAOC,WAAW;EAGtBC,YACUC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAHP,cAAS,GAAW,WAAW;EAKvC;EAEOC,WAAW,CAACC,KAAwB;IACzC;IACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,OAAON,UAAU,CAAC,MAAMM,KAAK,IAAI,cAAc,CAAC;EAClD;EAEAE,MAAM,CAACC,KAA0B;IAC/B,MAAMC,WAAW,GAAW,IAAI,CAACC,SAAS;IAC1C,OAAO,IAAI,CAACP,KAAK,CACdQ,IAAI,CAASF,WAAW,EAAED,KAAK,CAAC,CAACI,IAAI,CACpCZ,UAAU,CAAC,IAAI,CAACI,WAAW,CAAC,CAAC;EACnC;;AAnBWH,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;AAAA","names":["throwError","catchError","paygService","constructor","_http","handleError","error","console","getTax","model","completeUrl","commonUrl","post","pipe","factory"],"sourceRoot":"","sources":["G:\\databrain-demo\\databrain-code-test\\Web\\ClientApp\\src\\app\\payg-calculator\\services\\payg-service.ts"],"sourcesContent":["import { throwError as throwError, of as observableOf, Observable } from 'rxjs';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { PAYGSubmissionModel } from '../models/payg-submission-model';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class paygService {\r\n  private commonUrl: string = 'api/payg/';\r\n\r\n  constructor(\r\n    private _http: HttpClient,\r\n  ) {\r\n  }\r\n\r\n  public handleError(error: HttpErrorResponse) {\r\n    //just logging error to console - some server logging could be added\r\n    console.error(error);\r\n    return throwError(() => error || 'Server error');  \r\n  }\r\n\r\n  getTax(model: PAYGSubmissionModel): Observable<number> {\r\n    const completeUrl: string = this.commonUrl;\r\n    return this._http\r\n      .post<number>(completeUrl, model).pipe(\r\n        catchError(this.handleError));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}