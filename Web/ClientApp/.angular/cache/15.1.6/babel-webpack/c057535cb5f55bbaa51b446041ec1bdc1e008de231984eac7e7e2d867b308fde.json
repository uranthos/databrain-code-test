{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/payg-service\";\nimport * as i3 from \"@angular/common\";\nfunction PaygCalculatorComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"option\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"value\", i_r2)(\"label\", ctx_r0.paymentFrequencies[i_r2]);\n  }\n}\nexport class PaygCalculatorComponent {\n  constructor(fb, paygService) {\n    this.fb = fb;\n    this.paygService = paygService;\n    this.paymentFrequencies = ['Weekly', 'Fortnightly', 'Monthly', 'FourWeekly'];\n    this.taxableIncome = this.fb.control(0, [Validators.required]);\n    this.frequency = this.fb.control(0, [Validators.required]);\n    this.paygSubmission = this.fb.group({\n      taxableIncome: this.taxableIncome,\n      frequency: this.frequency\n    });\n  }\n  ngOnInit() {}\n  fetchResults() {\n    let model = this.paygSubmission.value;\n    this.paygService.getTax(model).subscribe(output => {\n      this.result = output.result;\n    });\n  }\n}\nPaygCalculatorComponent.ɵfac = function PaygCalculatorComponent_Factory(t) {\n  return new (t || PaygCalculatorComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.paygService));\n};\nPaygCalculatorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaygCalculatorComponent,\n  selectors: [[\"app-payg-calculator\"]],\n  decls: 17,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"submit\"], [1, \"component\"], [1, \"col\"], [1, \"row\", \"md-3\"], [1, \"input-group\"], [\"type\", \"number\", \"formControlName\", \"taxableIncome\"], [\"formControlName\", \"frequency\", \"number\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn-primary\"]],\n  template: function PaygCalculatorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function PaygCalculatorComponent_Template_form_submit_0_listener() {\n        return ctx.fetchResults();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵtext(4, \" Income Amount: \");\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵelement(6, \"input\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 3);\n      i0.ɵɵtext(8, \" Income Amount: \");\n      i0.ɵɵelementStart(9, \"div\", 4)(10, \"select\", 6);\n      i0.ɵɵtemplate(11, PaygCalculatorComponent_ng_container_11_Template, 2, 2, \"ng-container\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"div\", 3)(13, \"button\", 8);\n      i0.ɵɵtext(14, \"Submit\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 3);\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.paygSubmission);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.paymentFrequencies);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\" Result: \", ctx.result, \" \");\n    }\n  },\n  dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAAsFA,UAAU,QAAQ,gBAAgB;;;;;;;ICc5GC,6BAAmE;IAEjEA,yBAAuE;IACzEA,0BAAe;;;;;IADLA,eAAgB;IAAhBA,6BAAgB;;;ADRtC,OAAM,MAAOC,uBAAuB;EAclCC,YAAoBC,EAAe,EACzBC,WAAwB;IADd,OAAE,GAAFD,EAAE;IACZ,gBAAW,GAAXC,WAAW;IAbrB,uBAAkB,GAAa,CAAC,QAAQ,EAAE,aAAa,EAAE,SAAS,EAAE,YAAY,CAAC;IAEjF,kBAAa,GAAuB,IAAI,CAACD,EAAE,CAACE,OAAO,CAAC,CAAC,EAAE,CAACN,UAAU,CAACO,QAAQ,CAAC,CAAC;IAC7E,cAAS,GAAuB,IAAI,CAACH,EAAE,CAACE,OAAO,CAAC,CAAC,EAAE,CAACN,UAAU,CAACO,QAAQ,CAAC,CAAC;IAIzE,mBAAc,GAAc,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MACxCC,aAAa,EAAE,IAAI,CAACA,aAAa;MACjCC,SAAS,EAAE,IAAI,CAACA;KACjB,CAAqB;EAItB;EAEAC,QAAQ,IAER;EAEAC,YAAY;IAEV,IAAIC,KAAK,GAAG,IAAI,CAACC,cAAc,CAACC,KAA4B;IAG5D,IAAI,CAACV,WAAW,CAACW,MAAM,CAACH,KAAK,CAAC,CAACI,SAAS,CAACC,MAAM,IAAG;MAChD,IAAI,CAACC,MAAM,GAACD,MAAM,CAACC,MAAM;IAC3B,CAAC,CAAC;EAEJ;;AA/BWjB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVpCvB,+BAA8D;MAA3BA;QAAA,OAAUwB,kBAAc;MAAA,EAAE;MAE3DxB,8BAAuB;MAGjBA,gCACA;MAAAA,8BAAyB;MACvBA,2BAAuD;MACzDA,iBAAM;MAERA,8BAAsB;MACpBA,gCACA;MAAAA,8BAAyB;MAIrBA,4FAGe;MAEjBA,iBAAS;MAIbA,+BAAsB;MACsBA,uBAAM;MAAAA,iBAAS;MAE3DA,+BAAsB;MACpBA,aACF;MAAAA,iBAAM;;;MA9BNA,8CAA4B;MAgBMA,gBAAuB;MAAvBA,gDAAuB;MAavDA,eACF;MADEA,mDACF","names":["Validators","i0","PaygCalculatorComponent","constructor","fb","paygService","control","required","group","taxableIncome","frequency","ngOnInit","fetchResults","model","paygSubmission","value","getTax","subscribe","output","result","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["G:\\databrain-demo\\databrain-code-test\\Web\\ClientApp\\src\\app\\payg-calculator\\components\\payg-calculator\\payg-calculator.component.ts","G:\\databrain-demo\\databrain-code-test\\Web\\ClientApp\\src\\app\\payg-calculator\\components\\payg-calculator\\payg-calculator.component.html"],"sourcesContent":["\nimport { Component, OnInit } from '@angular/core';\nimport { PAYGSubmissionModel } from '../../models/payg-submission-model';\nimport { FormBuilder, FormGroup, FormGroupName, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport { paygService } from '../../services/payg-service';\n\n@Component({\n  selector: 'app-payg-calculator',\n  templateUrl: './payg-calculator.component.html',\n  styleUrls: ['./payg-calculator.component.css']\n})\nexport class PaygCalculatorComponent implements OnInit {\n\n  paymentFrequencies: string[] = ['Weekly', 'Fortnightly', 'Monthly', 'FourWeekly'];\n\n  taxableIncome: UntypedFormControl = this.fb.control(0, [Validators.required]);\n  frequency: UntypedFormControl = this.fb.control(0, [Validators.required]);\n\n  result?: number;\n\n  paygSubmission: FormGroup = this.fb.group({\n    taxableIncome: this.taxableIncome,\n    frequency: this.frequency\n  }) as UntypedFormGroup;\n\n  constructor(private fb: FormBuilder,\n    private paygService: paygService) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  fetchResults(): void {\n\n    let model = this.paygSubmission.value as PAYGSubmissionModel;\n\n\n    this.paygService.getTax(model).subscribe(output => {\n      this.result=output.result;\n    });\n\n  }\n\n\n}\n","\n<form [formGroup]=\"paygSubmission\" (submit)=\"fetchResults();\">\n\n  <div class=\"component\">\n    <div class=\"col\">\n      <div class=\"row md-3\">\n        Income Amount:\n        <div class=\"input-group\">\n          <input type=\"number\" formControlName=\"taxableIncome\" />\n        </div>\n      </div>\n      <div class=\"row md-3\">\n        Income Amount:\n        <div class=\"input-group\">\n\n          <select formControlName=\"frequency\" number>\n\n            <ng-container *ngFor=\"let f of paymentFrequencies; let i = index;\">\n\n              <option [attr.value]=\"i\" [attr.label]=\"paymentFrequencies[i]\"></option>\n            </ng-container>\n\n          </select>\n\n        </div>\n      </div>\n      <div class=\"row md-3\">\n        <button type=\"submit\" class=\"btn-primary\">Submit</button>\n      </div>\n      <div class=\"row md-3\">\n        Result: {{result}}\n      </div>\n    </div>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}