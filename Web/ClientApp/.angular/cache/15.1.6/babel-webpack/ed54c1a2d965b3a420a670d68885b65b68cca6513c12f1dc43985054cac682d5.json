{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/payg-service\";\nimport * as i3 from \"@angular/common\";\nfunction PaygCalculatorComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"option\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"value\", ctx_r0.paymentFrequencies[i_r2])(\"label\", ctx_r0.paymentFrequencies[i_r2]);\n  }\n}\nexport class PaygCalculatorComponent {\n  constructor(fb, paygService) {\n    this.fb = fb;\n    this.paygService = paygService;\n    this.paymentFrequencies = ['Weekly', 'Fortnightly', 'Monthly', 'FourWeekly'];\n    this.taxableIncome = this.fb.control(0, [Validators.required]);\n    this.frequency = this.fb.control('', [Validators.required]);\n    this.submit = this.fb.control(null);\n    this.result = this.fb.control(null);\n    this.paygSubmission = this.fb.group({\n      taxableIncome: this.taxableIncome,\n      frequency: this.frequency,\n      submit: this.submit,\n      result: this.result\n    });\n  }\n  ngOnInit() {}\n  fetchResults() {\n    let model = this.paygSubmission.value;\n    this.paygService.getTax(model).subscribe(result => {\n      this.result.patchValue(result);\n    });\n  }\n}\nPaygCalculatorComponent.ɵfac = function PaygCalculatorComponent_Factory(t) {\n  return new (t || PaygCalculatorComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.paygService));\n};\nPaygCalculatorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaygCalculatorComponent,\n  selectors: [[\"app-payg-calculator\"]],\n  decls: 22,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"submit\"], [1, \"component\"], [1, \"col\"], [1, \"row\", \"md-4\"], [1, \"input-group\"], [\"type\", \"number\", \"formControlName\", \"taxableIncome\"], [\"formControlName\", \"frequency\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", \"formControlName\", \"submit\", 1, \"btn-primary\"], [\"type\", \"number\", \"formControlName\", \"result\"]],\n  template: function PaygCalculatorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"payg-calculator works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function PaygCalculatorComponent_Template_form_submit_2_listener() {\n        return ctx.fetchResults();\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3);\n      i0.ɵɵtext(6, \" Income Amount: \");\n      i0.ɵɵelementStart(7, \"div\", 4);\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 3);\n      i0.ɵɵtext(10, \" Income Amount: \");\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"select\", 6);\n      i0.ɵɵtemplate(13, PaygCalculatorComponent_ng_container_13_Template, 2, 2, \"ng-container\", 7);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(14, \"div\", 2)(15, \"div\", 3)(16, \"button\", 8);\n      i0.ɵɵtext(17, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"div\", 2);\n      i0.ɵɵtext(19, \" Result: \");\n      i0.ɵɵelementStart(20, \"div\", 4);\n      i0.ɵɵelement(21, \"input\", 9);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.paygSubmission);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.paymentFrequencies);\n    }\n  },\n  dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAAsFA,UAAU,QAAQ,gBAAgB;;;;;;;ICiB5GC,6BAAmE;IAEjEA,yBAA2F;IAC7FA,0BAAe;;;;;IADLA,eAAoC;IAApCA,wDAAoC;;;ADX1D,OAAM,MAAOC,uBAAuB;EAgBlCC,YAAoBC,EAAe,EACzBC,WAAwB;IADd,OAAE,GAAFD,EAAE;IACZ,gBAAW,GAAXC,WAAW;IAfrB,uBAAkB,GAAa,CAAC,QAAQ,EAAE,aAAa,EAAE,SAAS,EAAE,YAAY,CAAC;IAEjF,kBAAa,GAAuB,IAAI,CAACD,EAAE,CAACE,OAAO,CAAC,CAAC,EAAE,CAACN,UAAU,CAACO,QAAQ,CAAC,CAAC;IAC7E,cAAS,GAAuB,IAAI,CAACH,EAAE,CAACE,OAAO,CAAC,EAAE,EAAE,CAACN,UAAU,CAACO,QAAQ,CAAC,CAAC;IAC1E,WAAM,GAAuB,IAAI,CAACH,EAAE,CAACE,OAAO,CAAC,IAAI,CAAC;IAClD,WAAM,GAAuB,IAAI,CAACF,EAAE,CAACE,OAAO,CAAC,IAAI,CAAC;IAElD,mBAAc,GAAc,IAAI,CAACF,EAAE,CAACI,KAAK,CAAC;MACxCC,aAAa,EAAE,IAAI,CAACA,aAAa;MACjCC,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBC,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBC,MAAM,EAAE,IAAI,CAACA;KACd,CAAqB;EAItB;EAEAC,QAAQ,IAER;EAEAC,YAAY;IAEV,IAAIC,KAAK,GAAG,IAAI,CAACC,cAAc,CAACC,KAA4B;IAE5D,IAAI,CAACZ,WAAW,CAACa,MAAM,CAACH,KAAK,CAAC,CAACI,SAAS,CAACP,MAAM,IAAG;MAChD,IAAI,CAACA,MAAM,CAACQ,UAAU,CAACR,MAAM,CAAC;IAChC,CAAC,CAAC;EAEJ;;AAhCWV,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXpCxB,yBAAG;MAAAA,sCAAsB;MAAAA,iBAAI;MAI7BA,+BAA8D;MAA3BA;QAAA,OAAUyB,kBAAc;MAAA,EAAE;MAE3DzB,8BAAuB;MAGjBA,gCACA;MAAAA,8BAAyB;MACvBA,2BAAuD;MACzDA,iBAAM;MAERA,8BAAsB;MACpBA,iCACA;MAAAA,+BAAyB;MAIrBA,4FAGe;MAEjBA,iBAAS;MAKfA,+BAAiB;MAEsDA,uBAAM;MAAAA,iBAAS;MAItFA,+BAAiB;MACfA,0BACA;MAAAA,+BAAyB;MACvBA,4BAAgD;MAClDA,iBAAM;;;MApCNA,eAA4B;MAA5BA,8CAA4B;MAgBMA,gBAAuB;MAAvBA,gDAAuB","names":["Validators","i0","PaygCalculatorComponent","constructor","fb","paygService","control","required","group","taxableIncome","frequency","submit","result","ngOnInit","fetchResults","model","paygSubmission","value","getTax","subscribe","patchValue","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["G:\\databrain-demo\\databrain-code-test\\Web\\ClientApp\\src\\app\\payg-calculator\\components\\payg-calculator\\payg-calculator.component.ts","G:\\databrain-demo\\databrain-code-test\\Web\\ClientApp\\src\\app\\payg-calculator\\components\\payg-calculator\\payg-calculator.component.html"],"sourcesContent":["\nimport { Component, OnInit } from '@angular/core';\nimport { PAYGSubmissionModel } from '../../models/payg-submission-model';\nimport { FormBuilder, FormGroup, FormGroupName, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport { paygService } from '../../services/payg-service';\n\n@Component({\n  selector: 'app-payg-calculator',\n  templateUrl: './payg-calculator.component.html',\n  styleUrls: ['./payg-calculator.component.css']\n})\nexport class PaygCalculatorComponent implements OnInit {\n\n  paymentFrequencies: string[] = ['Weekly', 'Fortnightly', 'Monthly', 'FourWeekly'];\n\n  taxableIncome: UntypedFormControl = this.fb.control(0, [Validators.required]);\n  frequency: UntypedFormControl = this.fb.control('', [Validators.required]);\n  submit: UntypedFormControl = this.fb.control(null)\n  result: UntypedFormControl = this.fb.control(null);\n\n  paygSubmission: FormGroup = this.fb.group({\n    taxableIncome: this.taxableIncome,\n    frequency: this.frequency,\n    submit: this.submit,\n    result: this.result\n  }) as UntypedFormGroup;\n\n  constructor(private fb: FormBuilder,\n    private paygService: paygService) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  fetchResults(): void {\n\n    let model = this.paygSubmission.value as PAYGSubmissionModel;\n\n    this.paygService.getTax(model).subscribe(result => {\n      this.result.patchValue(result);\n    });\n\n  }\n\n\n}\n","<p>payg-calculator works!</p>\n\n\n\n<form [formGroup]=\"paygSubmission\" (submit)=\"fetchResults();\">\n\n  <div class=\"component\">\n    <div class=\"col\">\n      <div class=\"row md-4\">\n        Income Amount:\n        <div class=\"input-group\">\n          <input type=\"number\" formControlName=\"taxableIncome\" />\n        </div>\n      </div>\n      <div class=\"row md-4\">\n        Income Amount:\n        <div class=\"input-group\">\n\n          <select formControlName=\"frequency\">\n\n            <ng-container *ngFor=\"let f of paymentFrequencies; let i = index;\">\n\n              <option [attr.value]=\"paymentFrequencies[i]\" [attr.label]=\"paymentFrequencies[i]\"></option>\n            </ng-container>\n\n          </select>\n\n        </div>\n      </div>\n    </div>\n    <div class=\"col\">\n      <div class=\"row md-4\">\n        <button type=\"submit\" class=\"btn-primary\" formControlName=\"submit\">Submit</button>\n      </div>\n    </div>\n\n    <div class=\"col\">\n      Result:\n      <div class=\"input-group\">\n        <input type=\"number\" formControlName=\"result\" />\n      </div>\n    </div>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}